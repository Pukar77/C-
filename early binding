// Binding refers to the process of converting identifiers (such as variable and performance names) into addresses. Binding is done for each variable and functions. For functions, it means that matching the call with the right function definition by the compiler. It takes place either at compile time or at runtime.
// Early Binding (compile-time time polymorphism) As the name indicates, compiler (or linker) directly associate an address to the function call. It replaces the call with a machine language instruction that tells the mainframe to leap to the address of the function.


#include <iostream>
using namespace std;
class pukar{
    public:
    void display(){
        cout<<"I am pukar rimal"<<endl;
    }
};
class rimal:public pukar{
    public:
    void display(){
        cout<<"I am a coder"<<endl;
    }
};
int main() {
    pukar *ptr =new rimal;
    rimal r;
    ptr= &r;
    ptr-> display();


    return 0;
}  //output=i am pukar rimal.
